(()=>{"use strict";class e{constructor(e,t,n,r){this.templateElement=document.getElementById(e),this.hostElement=document.getElementById(t);const s=document.importNode(this.templateElement.content,!0);this.element=s.firstElementChild,r&&(this.element.id=r),this.attach(n)}attach(e){this.hostElement.insertAdjacentElement(e?"afterbegin":"beforeend",this.element)}}function t(e){let t=!0;return e.required&&(t=t&&0!==e.value.toString().trim().length),null!=e.minLength&&"string"==typeof e.value&&(t=t&&e.value.length>e.minLength),null!=e.maxLength&&"string"==typeof e.value&&(t=t&&e.value.length<e.maxLength),null!=e.min&&"number"==typeof e.value&&(t=t&&e.value>e.min),null!=e.max&&"number"==typeof e.value&&(t=t&&e.value<e.max),t}function n(e,t,n){const r=n.value;return{configurable:!0,get(){return r.bind(this)}}}var r;!function(e){e[e.Active=0]="Active",e[e.Finished=1]="Finished"}(r||(r={}));class s{constructor(e,t,n,r,s){this.id=e,this.title=t,this.desc=n,this.people=r,this.status=s}}class i{constructor(){this.listeners=[]}addListener(e){this.listeners.push(e)}}class l extends i{constructor(){super(),this.projects=[]}static getInstance(){return this.instance||(this.instance=new l),this.instance}addProject(e,t,n){const i=new s(Math.random().toString(),e,t,n,r.Active);this.projects.push(i),this.updatedListeners()}moveProject(e,t){const n=this.projects.find((t=>t.id===e));n&&n.status!==t&&(n.status=t,this.updatedListeners())}updatedListeners(){for(const e of this.listeners)e(this.projects.slice())}}const o=l.getInstance();class a extends e{constructor(){super("project-input","app",!0,"user-input"),this.titleInputEl=this.element.querySelector("#title"),this.descInputEl=this.element.querySelector("#description"),this.peopleInputEl=this.element.querySelector("#people"),this.configure()}gatherUserInput(){const e=this.titleInputEl.value,n=this.descInputEl.value,r=this.peopleInputEl.value,s={value:n,required:!0,minLength:5},i={value:+r,required:!0,min:2,max:9};return t({value:e,required:!0})&&t(s)&&t(i)?[e,n,+r]:void alert("Invalid input, please try again")}clearInputs(){this.titleInputEl.value="",this.descInputEl.value="",this.peopleInputEl.value=""}submitHandler(e){e.preventDefault();const t=this.gatherUserInput();if(Array.isArray(t)){const[e,n,r]=t;o.addProject(e,n,r),this.clearInputs()}}configure(){this.element.addEventListener("submit",this.submitHandler)}renderContent(){}}!function(e,t,n,r){var s,i=arguments.length,l=i<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)l=Reflect.decorate(e,t,n,r);else for(var o=e.length-1;o>=0;o--)(s=e[o])&&(l=(i<3?s(l):i>3?s(t,n,l):s(t,n))||l);i>3&&l&&Object.defineProperty(t,n,l)}([n],a.prototype,"submitHandler",null);class c extends e{get persons(){return 1===this.project.people?"1 person":`${this.project.people} persons`}constructor(e,t){super("single-project",e,!1,t.id),this.project=t,this.configure(),this.renderContent()}dragStartHandler(e){e.dataTransfer.setData("text/plain",this.project.id),e.dataTransfer.effectAllowed="move"}dragEndHandler(e){}configure(){this.element.addEventListener("dragstart",this.dragStartHandler),this.element.addEventListener("dragend",this.dragEndHandler)}renderContent(){this.element.querySelector("h2").textContent=this.project.title,this.element.querySelector("h3").textContent=this.persons+"assigned",this.element.querySelector("p").textContent=this.project.desc}}!function(e,t,n,r){var s,i=arguments.length,l=i<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)l=Reflect.decorate(e,t,n,r);else for(var o=e.length-1;o>=0;o--)(s=e[o])&&(l=(i<3?s(l):i>3?s(t,n,l):s(t,n))||l);i>3&&l&&Object.defineProperty(t,n,l)}([n],c.prototype,"dragStartHandler",null);var d=function(e,t,n,r){var s,i=arguments.length,l=i<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)l=Reflect.decorate(e,t,n,r);else for(var o=e.length-1;o>=0;o--)(s=e[o])&&(l=(i<3?s(l):i>3?s(t,n,l):s(t,n))||l);return i>3&&l&&Object.defineProperty(t,n,l),l};class u extends e{constructor(e){super("project-list","app",!1,`${e}-projects`),this.type=e,this.assignedProject=[],this.configure(),this.renderContent()}dragOverHandler(e){e.dataTransfer&&"text/plain"===e.dataTransfer.types[0]&&(e.preventDefault(),this.element.querySelector("ul").classList.add("droppable"))}dropHandler(e){const t=e.dataTransfer.getData("text/plain");o.moveProject(t,"active"===this.type?r.Active:r.Finished)}dragLeaveHandler(e){this.element.querySelector("ul").classList.remove("droppable")}configure(){this.element.addEventListener("dragover",this.dragOverHandler),this.element.addEventListener("dragleave",this.dragLeaveHandler),this.element.addEventListener("drop",this.dropHandler),o.addListener((e=>{const t=e.filter((e=>"active"==this.type?e.status===r.Active:e.status===r.Finished));this.assignedProject=t,this.renderProjects()}))}renderContent(){const e=`${this.type}-projects-list`;this.element.querySelector("ul").id=e,this.element.querySelector("h2").textContent=this.type.toUpperCase()+"PROJECTS"}renderProjects(){document.getElementById(`${this.type}-projects-list`).innerHTML="";for(const e of this.assignedProject)new c(this.element.querySelector("ul").id,e)}}d([n],u.prototype,"dragOverHandler",null),d([n],u.prototype,"dropHandler",null),d([n],u.prototype,"dragLeaveHandler",null),new a,new u("active"),new u("finished")})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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Q0QzQixLQUFLUSxRQUFRNEQsY0FBYyxNQUNuQ2tDLFVBQVVPLE9BQU8sWUFDekIsQ0FFQXRDLFlBQ0N2RSxLQUFLUSxRQUFROEUsaUJBQWlCLFdBQVl0RixLQUFLb0csaUJBQy9DcEcsS0FBS1EsUUFBUThFLGlCQUFpQixZQUFhdEYsS0FBSzRHLGtCQUNoRDVHLEtBQUtRLFFBQVE4RSxpQkFBaUIsT0FBUXRGLEtBQUt3RyxhQUUzQ3hDLEVBQWF0QixhQUFhSyxJQUN6QixNQUFNK0QsRUFBa0IvRCxFQUFTZ0UsUUFBUWpELEdBQ3ZCLFVBQWI5RCxLQUFLa0csS0FDRHBDLEVBQUl2QixTQUFXTCxFQUFjcUIsT0FFOUJPLEVBQUl2QixTQUFXTCxFQUFjeUUsV0FFckMzRyxLQUFLbUcsZ0JBQWtCVyxFQUN2QjlHLEtBQUtnSCxnQkFBZ0IsR0FFdkIsQ0FFQXpCLGdCQUNDLE1BQU0wQixFQUFTLEdBQUdqSCxLQUFLa0cscUJBQ3ZCbEcsS0FBS1EsUUFBUTRELGNBQWMsTUFBTzFELEdBQUt1RyxFQUN2Q2pILEtBQUtRLFFBQVE0RCxjQUFjLE1BQU80QixZQUNqQ2hHLEtBQUtrRyxLQUFLZ0IsY0FBZ0IsVUFDNUIsQ0FFUUYsaUJBQ1E5RyxTQUFTQyxlQUN2QixHQUFHSCxLQUFLa0csc0JBRUZpQixVQUFZLEdBQ25CLElBQUssTUFBTUMsS0FBV3BILEtBQUttRyxnQkFDMUIsSUFBSVgsRUFBWXhGLEtBQUtRLFFBQVE0RCxjQUFjLE1BQU8xRCxHQUFJMEcsRUFFeEQsRUF6REEsR0FEQzFGLEcsb0NBVUQsR0FEQ0EsRyxnQ0FZRCxHQURDQSxHLHFDQ3hDRixJQUFJd0MsRUFDSixJQUFJK0IsRUFBWSxVQUNoQixJQUFJQSxFQUFZLFciLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wcmFjdGljZS8uL3NyYy9jb21wb25lbnRzL2Jhc2UtY29tcG9uZW50LnRzIiwid2VicGFjazovL3ByYWN0aWNlLy4vc3JjL3V0aWwvdmFsaWRhdGlvbi50cyIsIndlYnBhY2s6Ly9wcmFjdGljZS8uL3NyYy9kZWNvcmF0b3JzL2F1dG9iaW5kLWRlY29yYXRvci50cyIsIndlYnBhY2s6Ly9wcmFjdGljZS8uL3NyYy9tb2RlbHMvcHJvamVjdC1tb2RlbC50cyIsIndlYnBhY2s6Ly9wcmFjdGljZS8uL3NyYy9zdGF0ZS9wcm9qZWN0LXN0YXRlLnRzIiwid2VicGFjazovL3ByYWN0aWNlLy4vc3JjL2NvbXBvbmVudHMvcHJvamVjdC1pbnB1dC50cyIsIndlYnBhY2s6Ly9wcmFjdGljZS8uL3NyYy9jb21wb25lbnRzL3Byb2plY3QtaXRlbS50cyIsIndlYnBhY2s6Ly9wcmFjdGljZS8uL3NyYy9jb21wb25lbnRzL3Byb2plY3QtbGlzdC50cyIsIndlYnBhY2s6Ly9wcmFjdGljZS8uL3NyYy9hcHAudHMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29tcG9uZW50IEJhc2UgQ2xhc3NcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGFic3RyYWN0IGNsYXNzIENvbXBvbmVudDxcclxuXHRUIGV4dGVuZHMgSFRNTEVsZW1lbnQsXHJcblx0VSBleHRlbmRzIEhUTUxFbGVtZW50XHJcbj4ge1xyXG5cdHRlbXBsYXRlRWxlbWVudDogSFRNTFRlbXBsYXRlRWxlbWVudDtcclxuXHRob3N0RWxlbWVudDogVDtcclxuXHRlbGVtZW50OiBVO1xyXG5cclxuXHRjb25zdHJ1Y3RvcihcclxuXHRcdHRlbXBsYXRlSWQ6IHN0cmluZyxcclxuXHRcdGhvc3RFbGVtZW50SWQ6IHN0cmluZyxcclxuXHRcdGluc2VydEF0U3RhcnQ6IGJvb2xlYW4sXHJcblx0XHRuZXdFbGVtZW50SWQ/OiBzdHJpbmdcclxuXHQpIHtcclxuXHRcdHRoaXMudGVtcGxhdGVFbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXHJcblx0XHRcdHRlbXBsYXRlSWRcclxuXHRcdCkhIGFzIEhUTUxUZW1wbGF0ZUVsZW1lbnQ7XHJcblx0XHR0aGlzLmhvc3RFbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoaG9zdEVsZW1lbnRJZCkhIGFzIFQ7XHJcblxyXG5cdFx0Y29uc3QgaW1wb3J0ZWROb2RlID0gZG9jdW1lbnQuaW1wb3J0Tm9kZShcclxuXHRcdFx0dGhpcy50ZW1wbGF0ZUVsZW1lbnQuY29udGVudCxcclxuXHRcdFx0dHJ1ZVxyXG5cdFx0KTtcclxuXHRcdHRoaXMuZWxlbWVudCA9IGltcG9ydGVkTm9kZS5maXJzdEVsZW1lbnRDaGlsZCBhcyBVO1xyXG5cdFx0aWYgKG5ld0VsZW1lbnRJZCkge1xyXG5cdFx0XHR0aGlzLmVsZW1lbnQuaWQgPSBuZXdFbGVtZW50SWQ7XHJcblx0XHR9XHJcblxyXG5cdFx0dGhpcy5hdHRhY2goaW5zZXJ0QXRTdGFydCk7XHJcblx0fVxyXG5cclxuXHRwcml2YXRlIGF0dGFjaChpbnNlcnRBdEJlZ2lubmluZzogYm9vbGVhbikge1xyXG5cdFx0dGhpcy5ob3N0RWxlbWVudC5pbnNlcnRBZGphY2VudEVsZW1lbnQoXHJcblx0XHRcdGluc2VydEF0QmVnaW5uaW5nID8gXCJhZnRlcmJlZ2luXCIgOiBcImJlZm9yZWVuZFwiLFxyXG5cdFx0XHR0aGlzLmVsZW1lbnRcclxuXHRcdCk7XHJcblx0fVxyXG5cclxuXHRhYnN0cmFjdCBjb25maWd1cmUoKTogdm9pZDtcclxuXHRhYnN0cmFjdCByZW5kZXJDb250ZW50KCk6IHZvaWQ7XHJcbn1cclxuIiwiLy8gVmFsaWRhdGlvblxyXG5leHBvcnQgaW50ZXJmYWNlIFZhbGlkYXRhYmxlIHtcclxuXHR2YWx1ZTogc3RyaW5nIHwgbnVtYmVyO1xyXG5cdHJlcXVpcmVkPzogYm9vbGVhbjtcclxuXHRtaW5MZW5ndGg/OiBudW1iZXI7XHJcblx0bWF4TGVuZ3RoPzogbnVtYmVyO1xyXG5cdG1pbj86IG51bWJlcjtcclxuXHRtYXg/OiBudW1iZXI7XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiB2YWxpZGF0ZSh2YWxpZGF0YWJsZUlucHV0OiBWYWxpZGF0YWJsZSkge1xyXG5cdGxldCBpc1ZhbGlkID0gdHJ1ZTtcclxuXHRpZiAodmFsaWRhdGFibGVJbnB1dC5yZXF1aXJlZCkge1xyXG5cdFx0aXNWYWxpZCA9XHJcblx0XHRcdGlzVmFsaWQgJiYgdmFsaWRhdGFibGVJbnB1dC52YWx1ZS50b1N0cmluZygpLnRyaW0oKS5sZW5ndGggIT09IDA7XHJcblx0fVxyXG5cdGlmIChcclxuXHRcdHZhbGlkYXRhYmxlSW5wdXQubWluTGVuZ3RoICE9IG51bGwgJiZcclxuXHRcdHR5cGVvZiB2YWxpZGF0YWJsZUlucHV0LnZhbHVlID09PSBcInN0cmluZ1wiXHJcblx0KSB7XHJcblx0XHRpc1ZhbGlkID1cclxuXHRcdFx0aXNWYWxpZCAmJlxyXG5cdFx0XHR2YWxpZGF0YWJsZUlucHV0LnZhbHVlLmxlbmd0aCA+IHZhbGlkYXRhYmxlSW5wdXQubWluTGVuZ3RoO1xyXG5cdH1cclxuXHRpZiAoXHJcblx0XHR2YWxpZGF0YWJsZUlucHV0Lm1heExlbmd0aCAhPSBudWxsICYmXHJcblx0XHR0eXBlb2YgdmFsaWRhdGFibGVJbnB1dC52YWx1ZSA9PT0gXCJzdHJpbmdcIlxyXG5cdCkge1xyXG5cdFx0aXNWYWxpZCA9XHJcblx0XHRcdGlzVmFsaWQgJiZcclxuXHRcdFx0dmFsaWRhdGFibGVJbnB1dC52YWx1ZS5sZW5ndGggPCB2YWxpZGF0YWJsZUlucHV0Lm1heExlbmd0aDtcclxuXHR9XHJcblx0aWYgKFxyXG5cdFx0dmFsaWRhdGFibGVJbnB1dC5taW4gIT0gbnVsbCAmJlxyXG5cdFx0dHlwZW9mIHZhbGlkYXRhYmxlSW5wdXQudmFsdWUgPT09IFwibnVtYmVyXCJcclxuXHQpIHtcclxuXHRcdGlzVmFsaWQgPSBpc1ZhbGlkICYmIHZhbGlkYXRhYmxlSW5wdXQudmFsdWUgPiB2YWxpZGF0YWJsZUlucHV0Lm1pbjtcclxuXHR9XHJcblx0aWYgKFxyXG5cdFx0dmFsaWRhdGFibGVJbnB1dC5tYXggIT0gbnVsbCAmJlxyXG5cdFx0dHlwZW9mIHZhbGlkYXRhYmxlSW5wdXQudmFsdWUgPT09IFwibnVtYmVyXCJcclxuXHQpIHtcclxuXHRcdGlzVmFsaWQgPSBpc1ZhbGlkICYmIHZhbGlkYXRhYmxlSW5wdXQudmFsdWUgPCB2YWxpZGF0YWJsZUlucHV0Lm1heDtcclxuXHR9XHJcblx0cmV0dXJuIGlzVmFsaWQ7XHJcbn1cclxuIiwiLy8gYXV0b2JpbmQgZGVjb3JhdG9yXHJcbmV4cG9ydCBmdW5jdGlvbiBhdXRvYmluZChfOiBhbnksIF8yOiBzdHJpbmcsIGRlc2NyaXB0b3I6IFByb3BlcnR5RGVzY3JpcHRvcikge1xyXG5cdGNvbnN0IG9yaWdpbk1ldGhvZCA9IGRlc2NyaXB0b3IudmFsdWU7XHJcblx0Y29uc3QgYWRqRGVzY3JpcHRvcjogUHJvcGVydHlEZXNjcmlwdG9yID0ge1xyXG5cdFx0Y29uZmlndXJhYmxlOiB0cnVlLFxyXG5cdFx0Z2V0KCkge1xyXG5cdFx0XHRjb25zdCBib3VuZEZuID0gb3JpZ2luTWV0aG9kLmJpbmQodGhpcyk7XHJcblx0XHRcdHJldHVybiBib3VuZEZuO1xyXG5cdFx0fSxcclxuXHR9O1xyXG5cdHJldHVybiBhZGpEZXNjcmlwdG9yO1xyXG59XHJcbiIsIi8vIFByb2plY3QgVHlwZVxyXG5leHBvcnQgZW51bSBQcm9qZWN0U3RhdHVzIHtcclxuXHRBY3RpdmUsXHJcblx0RmluaXNoZWQsXHJcbn1cclxuXHJcbmV4cG9ydCBjbGFzcyBQcm9qZWN0IHtcclxuXHRjb25zdHJ1Y3RvcihcclxuXHRcdHB1YmxpYyBpZDogc3RyaW5nLFxyXG5cdFx0cHVibGljIHRpdGxlOiBzdHJpbmcsXHJcblx0XHRwdWJsaWMgZGVzYzogc3RyaW5nLFxyXG5cdFx0cHVibGljIHBlb3BsZTogbnVtYmVyLFxyXG5cdFx0cHVibGljIHN0YXR1czogUHJvamVjdFN0YXR1c1xyXG5cdCkge31cclxufVxyXG4iLCJpbXBvcnQgeyBQcm9qZWN0LCBQcm9qZWN0U3RhdHVzIH0gZnJvbSBcIi4uL21vZGVscy9wcm9qZWN0LW1vZGVsXCI7XHJcblxyXG4vLyBQcm9qZWN0IFN0YXRlIE1hbmFnZW1lbnRcclxudHlwZSBMaXN0ZW5lcjxUPiA9IChpdGVtczogVFtdKSA9PiB2b2lkO1xyXG5cclxuY2xhc3MgU3RhdGU8VD4ge1xyXG5cdHByb3RlY3RlZCBsaXN0ZW5lcnM6IExpc3RlbmVyPFQ+W10gPSBbXTtcclxuXHRhZGRMaXN0ZW5lcihsaXN0ZW5lckZuOiBMaXN0ZW5lcjxUPikge1xyXG5cdFx0dGhpcy5saXN0ZW5lcnMucHVzaChsaXN0ZW5lckZuKTtcclxuXHR9XHJcbn1cclxuXHJcbmV4cG9ydCBjbGFzcyBQcm9qZWN0U3RhdGUgZXh0ZW5kcyBTdGF0ZTxQcm9qZWN0PiB7XHJcblx0cHJpdmF0ZSBwcm9qZWN0czogUHJvamVjdFtdID0gW107XHJcblx0cHJpdmF0ZSBzdGF0aWMgaW5zdGFuY2U6IFByb2plY3RTdGF0ZTtcclxuXHJcblx0cHJpdmF0ZSBjb25zdHJ1Y3RvcigpIHtcclxuXHRcdHN1cGVyKCk7XHJcblx0fVxyXG5cclxuXHRzdGF0aWMgZ2V0SW5zdGFuY2UoKSB7XHJcblx0XHRpZiAodGhpcy5pbnN0YW5jZSkge1xyXG5cdFx0XHRyZXR1cm4gdGhpcy5pbnN0YW5jZTtcclxuXHRcdH1cclxuXHRcdHRoaXMuaW5zdGFuY2UgPSBuZXcgUHJvamVjdFN0YXRlKCk7XHJcblx0XHRyZXR1cm4gdGhpcy5pbnN0YW5jZTtcclxuXHR9XHJcblxyXG5cdGFkZFByb2plY3QodGl0bGU6IHN0cmluZywgZGVzYzogc3RyaW5nLCBudW1PZlBlb3BsZTogbnVtYmVyKSB7XHJcblx0XHRjb25zdCBuZXdQcm9qZWN0ID0gbmV3IFByb2plY3QoXHJcblx0XHRcdE1hdGgucmFuZG9tKCkudG9TdHJpbmcoKSxcclxuXHRcdFx0dGl0bGUsXHJcblx0XHRcdGRlc2MsXHJcblx0XHRcdG51bU9mUGVvcGxlLFxyXG5cdFx0XHRQcm9qZWN0U3RhdHVzLkFjdGl2ZVxyXG5cdFx0KTtcclxuXHRcdHRoaXMucHJvamVjdHMucHVzaChuZXdQcm9qZWN0KTtcclxuXHRcdHRoaXMudXBkYXRlZExpc3RlbmVycygpO1xyXG5cdH1cclxuXHJcblx0bW92ZVByb2plY3QocHJvamVjdElkOiBzdHJpbmcsIG5ld1N0YXR1czogUHJvamVjdFN0YXR1cykge1xyXG5cdFx0Y29uc3QgcHJvamVjdCA9IHRoaXMucHJvamVjdHMuZmluZCgocHJqKSA9PiBwcmouaWQgPT09IHByb2plY3RJZCk7XHJcblx0XHRpZiAocHJvamVjdCAmJiBwcm9qZWN0LnN0YXR1cyAhPT0gbmV3U3RhdHVzKSB7XHJcblx0XHRcdHByb2plY3Quc3RhdHVzID0gbmV3U3RhdHVzO1xyXG5cdFx0XHR0aGlzLnVwZGF0ZWRMaXN0ZW5lcnMoKTtcclxuXHRcdH1cclxuXHR9XHJcblxyXG5cdHByaXZhdGUgdXBkYXRlZExpc3RlbmVycygpIHtcclxuXHRcdGZvciAoY29uc3QgbGlzdGVuZXJGbiBvZiB0aGlzLmxpc3RlbmVycykge1xyXG5cdFx0XHRsaXN0ZW5lckZuKHRoaXMucHJvamVjdHMuc2xpY2UoKSk7XHJcblx0XHR9XHJcblx0fVxyXG59XHJcblxyXG5leHBvcnQgY29uc3QgcHJvamVjdFN0YXRlID0gUHJvamVjdFN0YXRlLmdldEluc3RhbmNlKCk7XHJcbiIsImltcG9ydCBDb21wb25lbnQgZnJvbSBcIi4vYmFzZS1jb21wb25lbnRcIjtcclxuaW1wb3J0ICogYXMgVmFsaWRhdGlvbiBmcm9tIFwiLi4vdXRpbC92YWxpZGF0aW9uXCI7XHJcbmltcG9ydCB7IGF1dG9iaW5kIH0gZnJvbSBcIi4uL2RlY29yYXRvcnMvYXV0b2JpbmQtZGVjb3JhdG9yXCI7XHJcbmltcG9ydCB7IHByb2plY3RTdGF0ZSB9IGZyb20gXCIuLi9zdGF0ZS9wcm9qZWN0LXN0YXRlXCI7XHJcblxyXG4vLyBQcm9qZWN0IGlucHV0IGNsYXNzXHJcbmV4cG9ydCBjbGFzcyBQcm9qZWN0SW5wdXQgZXh0ZW5kcyBDb21wb25lbnQ8SFRNTERpdkVsZW1lbnQsIEhUTUxGb3JtRWxlbWVudD4ge1xyXG5cdHRpdGxlSW5wdXRFbDogSFRNTElucHV0RWxlbWVudDtcclxuXHRkZXNjSW5wdXRFbDogSFRNTElucHV0RWxlbWVudDtcclxuXHRwZW9wbGVJbnB1dEVsOiBIVE1MSW5wdXRFbGVtZW50O1xyXG5cclxuXHRjb25zdHJ1Y3RvcigpIHtcclxuXHRcdHN1cGVyKFwicHJvamVjdC1pbnB1dFwiLCBcImFwcFwiLCB0cnVlLCBcInVzZXItaW5wdXRcIik7XHJcblx0XHR0aGlzLnRpdGxlSW5wdXRFbCA9IHRoaXMuZWxlbWVudC5xdWVyeVNlbGVjdG9yKFxyXG5cdFx0XHRcIiN0aXRsZVwiXHJcblx0XHQpIGFzIEhUTUxJbnB1dEVsZW1lbnQ7XHJcblx0XHR0aGlzLmRlc2NJbnB1dEVsID0gdGhpcy5lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXHJcblx0XHRcdFwiI2Rlc2NyaXB0aW9uXCJcclxuXHRcdCkgYXMgSFRNTElucHV0RWxlbWVudDtcclxuXHRcdHRoaXMucGVvcGxlSW5wdXRFbCA9IHRoaXMuZWxlbWVudC5xdWVyeVNlbGVjdG9yKFxyXG5cdFx0XHRcIiNwZW9wbGVcIlxyXG5cdFx0KSBhcyBIVE1MSW5wdXRFbGVtZW50O1xyXG5cclxuXHRcdHRoaXMuY29uZmlndXJlKCk7XHJcblx0fVxyXG5cclxuXHRwcml2YXRlIGdhdGhlclVzZXJJbnB1dCgpOiBbc3RyaW5nLCBzdHJpbmcsIG51bWJlcl0gfCB2b2lkIHtcclxuXHRcdGNvbnN0IGVudGVyZWRUaXRsZSA9IHRoaXMudGl0bGVJbnB1dEVsLnZhbHVlO1xyXG5cdFx0Y29uc3QgZW50ZXJlZERlc2MgPSB0aGlzLmRlc2NJbnB1dEVsLnZhbHVlO1xyXG5cdFx0Y29uc3QgZW50ZXJlZFBlb3BsZSA9IHRoaXMucGVvcGxlSW5wdXRFbC52YWx1ZTtcclxuXHJcblx0XHRjb25zdCB0aXRsZVZhbGlkYXRhYmxlOiBWYWxpZGF0aW9uLlZhbGlkYXRhYmxlID0ge1xyXG5cdFx0XHR2YWx1ZTogZW50ZXJlZFRpdGxlLFxyXG5cdFx0XHRyZXF1aXJlZDogdHJ1ZSxcclxuXHRcdH07XHJcblx0XHRjb25zdCBkZXNjVmFsaWRhdGFibGU6IFZhbGlkYXRpb24uVmFsaWRhdGFibGUgPSB7XHJcblx0XHRcdHZhbHVlOiBlbnRlcmVkRGVzYyxcclxuXHRcdFx0cmVxdWlyZWQ6IHRydWUsXHJcblx0XHRcdG1pbkxlbmd0aDogNSxcclxuXHRcdH07XHJcblx0XHRjb25zdCBwZW9wbGVWYWxpZGF0YWJsZTogVmFsaWRhdGlvbi5WYWxpZGF0YWJsZSA9IHtcclxuXHRcdFx0dmFsdWU6ICtlbnRlcmVkUGVvcGxlLFxyXG5cdFx0XHRyZXF1aXJlZDogdHJ1ZSxcclxuXHRcdFx0bWluOiAyLFxyXG5cdFx0XHRtYXg6IDksXHJcblx0XHR9O1xyXG5cdFx0aWYgKFxyXG5cdFx0XHQhVmFsaWRhdGlvbi52YWxpZGF0ZSh0aXRsZVZhbGlkYXRhYmxlKSB8fFxyXG5cdFx0XHQhVmFsaWRhdGlvbi52YWxpZGF0ZShkZXNjVmFsaWRhdGFibGUpIHx8XHJcblx0XHRcdCFWYWxpZGF0aW9uLnZhbGlkYXRlKHBlb3BsZVZhbGlkYXRhYmxlKVxyXG5cdFx0KSB7XHJcblx0XHRcdGFsZXJ0KFwiSW52YWxpZCBpbnB1dCwgcGxlYXNlIHRyeSBhZ2FpblwiKTtcclxuXHRcdFx0cmV0dXJuO1xyXG5cdFx0fSBlbHNlIHtcclxuXHRcdFx0cmV0dXJuIFtlbnRlcmVkVGl0bGUsIGVudGVyZWREZXNjLCArZW50ZXJlZFBlb3BsZV07XHJcblx0XHR9XHJcblx0fVxyXG5cclxuXHRwcml2YXRlIGNsZWFySW5wdXRzKCkge1xyXG5cdFx0dGhpcy50aXRsZUlucHV0RWwudmFsdWUgPSBcIlwiO1xyXG5cdFx0dGhpcy5kZXNjSW5wdXRFbC52YWx1ZSA9IFwiXCI7XHJcblx0XHR0aGlzLnBlb3BsZUlucHV0RWwudmFsdWUgPSBcIlwiO1xyXG5cdH1cclxuXHJcblx0QGF1dG9iaW5kXHJcblx0cHJpdmF0ZSBzdWJtaXRIYW5kbGVyKGU6IEV2ZW50KSB7XHJcblx0XHRlLnByZXZlbnREZWZhdWx0KCk7XHJcblx0XHRjb25zdCB1c2VySW5wdXQgPSB0aGlzLmdhdGhlclVzZXJJbnB1dCgpO1xyXG5cdFx0aWYgKEFycmF5LmlzQXJyYXkodXNlcklucHV0KSkge1xyXG5cdFx0XHRjb25zdCBbdGl0bGUsIGRlc2MsIHBlb3BsZV0gPSB1c2VySW5wdXQ7XHJcblx0XHRcdHByb2plY3RTdGF0ZS5hZGRQcm9qZWN0KHRpdGxlLCBkZXNjLCBwZW9wbGUpO1xyXG5cdFx0XHR0aGlzLmNsZWFySW5wdXRzKCk7XHJcblx0XHR9XHJcblx0fVxyXG5cclxuXHRjb25maWd1cmUoKSB7XHJcblx0XHR0aGlzLmVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcInN1Ym1pdFwiLCB0aGlzLnN1Ym1pdEhhbmRsZXIpO1xyXG5cdH1cclxuXHJcblx0cmVuZGVyQ29udGVudCgpOiB2b2lkIHt9XHJcbn1cclxuIiwiaW1wb3J0IHsgRHJhZ2dhYmxlIH0gZnJvbSBcIi4uL21vZGVscy9kcmFnLWRyb3AtaW50ZXJmYWNlc1wiO1xyXG5pbXBvcnQgeyBQcm9qZWN0IH0gZnJvbSBcIi4uL21vZGVscy9wcm9qZWN0LW1vZGVsXCI7XHJcbmltcG9ydCBDb21wb25lbnQgZnJvbSBcIi4vYmFzZS1jb21wb25lbnRcIjtcclxuaW1wb3J0IHsgYXV0b2JpbmQgfSBmcm9tIFwiLi4vZGVjb3JhdG9ycy9hdXRvYmluZC1kZWNvcmF0b3JcIjtcclxuLy8gIFByb2plY3RJdGVtIENsYXNzXHJcblxyXG5leHBvcnQgY2xhc3MgUHJvamVjdEl0ZW1cclxuXHRleHRlbmRzIENvbXBvbmVudDxIVE1MVUxpc3RFbGVtZW50LCBIVE1MTElFbGVtZW50PlxyXG5cdGltcGxlbWVudHMgRHJhZ2dhYmxlXHJcbntcclxuXHRwcml2YXRlIHByb2plY3Q6IFByb2plY3Q7XHJcblxyXG5cdGdldCBwZXJzb25zKCkge1xyXG5cdFx0aWYgKHRoaXMucHJvamVjdC5wZW9wbGUgPT09IDEpIHtcclxuXHRcdFx0cmV0dXJuIFwiMSBwZXJzb25cIjtcclxuXHRcdH0gZWxzZSB7XHJcblx0XHRcdHJldHVybiBgJHt0aGlzLnByb2plY3QucGVvcGxlfSBwZXJzb25zYDtcclxuXHRcdH1cclxuXHR9XHJcblxyXG5cdGNvbnN0cnVjdG9yKGhvc3RJZDogc3RyaW5nLCBwcm9qZWN0OiBQcm9qZWN0KSB7XHJcblx0XHRzdXBlcihcInNpbmdsZS1wcm9qZWN0XCIsIGhvc3RJZCwgZmFsc2UsIHByb2plY3QuaWQpO1xyXG5cdFx0dGhpcy5wcm9qZWN0ID0gcHJvamVjdDtcclxuXHJcblx0XHR0aGlzLmNvbmZpZ3VyZSgpO1xyXG5cdFx0dGhpcy5yZW5kZXJDb250ZW50KCk7XHJcblx0fVxyXG5cclxuXHRAYXV0b2JpbmRcclxuXHRkcmFnU3RhcnRIYW5kbGVyKGU6IERyYWdFdmVudCk6IHZvaWQge1xyXG5cdFx0ZS5kYXRhVHJhbnNmZXIhLnNldERhdGEoXCJ0ZXh0L3BsYWluXCIsIHRoaXMucHJvamVjdC5pZCk7XHJcblx0XHRlLmRhdGFUcmFuc2ZlciEuZWZmZWN0QWxsb3dlZCA9IFwibW92ZVwiO1xyXG5cdH1cclxuXHJcblx0ZHJhZ0VuZEhhbmRsZXIoZTogRHJhZ0V2ZW50KTogdm9pZCB7fVxyXG5cclxuXHRjb25maWd1cmUoKSB7XHJcblx0XHR0aGlzLmVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcImRyYWdzdGFydFwiLCB0aGlzLmRyYWdTdGFydEhhbmRsZXIpO1xyXG5cdFx0dGhpcy5lbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJkcmFnZW5kXCIsIHRoaXMuZHJhZ0VuZEhhbmRsZXIpO1xyXG5cdH1cclxuXHRyZW5kZXJDb250ZW50KCkge1xyXG5cdFx0dGhpcy5lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCJoMlwiKSEudGV4dENvbnRlbnQgPSB0aGlzLnByb2plY3QudGl0bGU7XHJcblx0XHR0aGlzLmVsZW1lbnQucXVlcnlTZWxlY3RvcihcImgzXCIpIS50ZXh0Q29udGVudCA9XHJcblx0XHRcdHRoaXMucGVyc29ucyArIFwiYXNzaWduZWRcIjtcclxuXHRcdHRoaXMuZWxlbWVudC5xdWVyeVNlbGVjdG9yKFwicFwiKSEudGV4dENvbnRlbnQgPSB0aGlzLnByb2plY3QuZGVzYztcclxuXHR9XHJcbn1cclxuIiwiaW1wb3J0IHsgRHJhZ1RhcmdldCB9IGZyb20gXCIuLi9tb2RlbHMvZHJhZy1kcm9wLWludGVyZmFjZXNcIjtcclxuaW1wb3J0IHsgcHJvamVjdFN0YXRlIH0gZnJvbSBcIi4uL3N0YXRlL3Byb2plY3Qtc3RhdGVcIjtcclxuaW1wb3J0IHsgUHJvamVjdCwgUHJvamVjdFN0YXR1cyB9IGZyb20gXCIuLi9tb2RlbHMvcHJvamVjdC1tb2RlbFwiO1xyXG5pbXBvcnQgQ29tcG9uZW50IGZyb20gXCIuL2Jhc2UtY29tcG9uZW50XCI7XHJcbmltcG9ydCB7IGF1dG9iaW5kIH0gZnJvbSBcIi4uL2RlY29yYXRvcnMvYXV0b2JpbmQtZGVjb3JhdG9yXCI7XHJcbmltcG9ydCB7IFByb2plY3RJdGVtIH0gZnJvbSBcIi4vcHJvamVjdC1pdGVtXCI7XHJcblxyXG4vLyBQcm9qZWN0IExpc3QgY2xhc3NcclxuZXhwb3J0IGNsYXNzIFByb2plY3RMaXN0XHJcblx0ZXh0ZW5kcyBDb21wb25lbnQ8SFRNTERpdkVsZW1lbnQsIEhUTUxFbGVtZW50PlxyXG5cdGltcGxlbWVudHMgRHJhZ1RhcmdldFxyXG57XHJcblx0YXNzaWduZWRQcm9qZWN0OiBQcm9qZWN0W107XHJcblxyXG5cdGNvbnN0cnVjdG9yKHByaXZhdGUgdHlwZTogXCJhY3RpdmVcIiB8IFwiZmluaXNoZWRcIikge1xyXG5cdFx0c3VwZXIoXCJwcm9qZWN0LWxpc3RcIiwgXCJhcHBcIiwgZmFsc2UsIGAke3R5cGV9LXByb2plY3RzYCk7XHJcblxyXG5cdFx0dGhpcy5hc3NpZ25lZFByb2plY3QgPSBbXTtcclxuXHJcblx0XHR0aGlzLmNvbmZpZ3VyZSgpO1xyXG5cdFx0dGhpcy5yZW5kZXJDb250ZW50KCk7XHJcblx0fVxyXG5cclxuXHRAYXV0b2JpbmRcclxuXHRkcmFnT3ZlckhhbmRsZXIoZTogRHJhZ0V2ZW50KTogdm9pZCB7XHJcblx0XHRpZiAoZS5kYXRhVHJhbnNmZXIgJiYgZS5kYXRhVHJhbnNmZXIudHlwZXNbMF0gPT09IFwidGV4dC9wbGFpblwiKSB7XHJcblx0XHRcdGUucHJldmVudERlZmF1bHQoKTtcclxuXHRcdFx0Y29uc3QgbGlzdEVsID0gdGhpcy5lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCJ1bFwiKSE7XHJcblx0XHRcdGxpc3RFbC5jbGFzc0xpc3QuYWRkKFwiZHJvcHBhYmxlXCIpO1xyXG5cdFx0fVxyXG5cdH1cclxuXHJcblx0QGF1dG9iaW5kXHJcblx0ZHJvcEhhbmRsZXIoZTogRHJhZ0V2ZW50KTogdm9pZCB7XHJcblx0XHRjb25zdCBwcmpJZCA9IGUuZGF0YVRyYW5zZmVyIS5nZXREYXRhKFwidGV4dC9wbGFpblwiKTtcclxuXHRcdHByb2plY3RTdGF0ZS5tb3ZlUHJvamVjdChcclxuXHRcdFx0cHJqSWQsXHJcblx0XHRcdHRoaXMudHlwZSA9PT0gXCJhY3RpdmVcIlxyXG5cdFx0XHRcdD8gUHJvamVjdFN0YXR1cy5BY3RpdmVcclxuXHRcdFx0XHQ6IFByb2plY3RTdGF0dXMuRmluaXNoZWRcclxuXHRcdCk7XHJcblx0fVxyXG5cclxuXHRAYXV0b2JpbmRcclxuXHRkcmFnTGVhdmVIYW5kbGVyKF86IERyYWdFdmVudCk6IHZvaWQge1xyXG5cdFx0Y29uc3QgbGlzdEVsID0gdGhpcy5lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCJ1bFwiKSE7XHJcblx0XHRsaXN0RWwuY2xhc3NMaXN0LnJlbW92ZShcImRyb3BwYWJsZVwiKTtcclxuXHR9XHJcblxyXG5cdGNvbmZpZ3VyZSgpIHtcclxuXHRcdHRoaXMuZWxlbWVudC5hZGRFdmVudExpc3RlbmVyKFwiZHJhZ292ZXJcIiwgdGhpcy5kcmFnT3ZlckhhbmRsZXIpO1xyXG5cdFx0dGhpcy5lbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJkcmFnbGVhdmVcIiwgdGhpcy5kcmFnTGVhdmVIYW5kbGVyKTtcclxuXHRcdHRoaXMuZWxlbWVudC5hZGRFdmVudExpc3RlbmVyKFwiZHJvcFwiLCB0aGlzLmRyb3BIYW5kbGVyKTtcclxuXHJcblx0XHRwcm9qZWN0U3RhdGUuYWRkTGlzdGVuZXIoKHByb2plY3RzOiBQcm9qZWN0W10pID0+IHtcclxuXHRcdFx0Y29uc3QgcmVsZXZhbnRQcm9qZWN0ID0gcHJvamVjdHMuZmlsdGVyKChwcmopID0+IHtcclxuXHRcdFx0XHRpZiAodGhpcy50eXBlID09IFwiYWN0aXZlXCIpIHtcclxuXHRcdFx0XHRcdHJldHVybiBwcmouc3RhdHVzID09PSBQcm9qZWN0U3RhdHVzLkFjdGl2ZTtcclxuXHRcdFx0XHR9XHJcblx0XHRcdFx0cmV0dXJuIHByai5zdGF0dXMgPT09IFByb2plY3RTdGF0dXMuRmluaXNoZWQ7XHJcblx0XHRcdH0pO1xyXG5cdFx0XHR0aGlzLmFzc2lnbmVkUHJvamVjdCA9IHJlbGV2YW50UHJvamVjdDtcclxuXHRcdFx0dGhpcy5yZW5kZXJQcm9qZWN0cygpO1xyXG5cdFx0fSk7XHJcblx0fVxyXG5cclxuXHRyZW5kZXJDb250ZW50KCkge1xyXG5cdFx0Y29uc3QgbGlzdElkID0gYCR7dGhpcy50eXBlfS1wcm9qZWN0cy1saXN0YDtcclxuXHRcdHRoaXMuZWxlbWVudC5xdWVyeVNlbGVjdG9yKFwidWxcIikhLmlkID0gbGlzdElkO1xyXG5cdFx0dGhpcy5lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCJoMlwiKSEudGV4dENvbnRlbnQgPVxyXG5cdFx0XHR0aGlzLnR5cGUudG9VcHBlckNhc2UoKSArIFwiUFJPSkVDVFNcIjtcclxuXHR9XHJcblxyXG5cdHByaXZhdGUgcmVuZGVyUHJvamVjdHMoKSB7XHJcblx0XHRjb25zdCBsaXN0RWwgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcclxuXHRcdFx0YCR7dGhpcy50eXBlfS1wcm9qZWN0cy1saXN0YFxyXG5cdFx0KSEgYXMgSFRNTFVMaXN0RWxlbWVudDtcclxuXHRcdGxpc3RFbC5pbm5lckhUTUwgPSBcIlwiO1xyXG5cdFx0Zm9yIChjb25zdCBwcmpJdGVtIG9mIHRoaXMuYXNzaWduZWRQcm9qZWN0KSB7XHJcblx0XHRcdG5ldyBQcm9qZWN0SXRlbSh0aGlzLmVsZW1lbnQucXVlcnlTZWxlY3RvcihcInVsXCIpIS5pZCwgcHJqSXRlbSk7XHJcblx0XHR9XHJcblx0fVxyXG59XHJcbiIsImltcG9ydCB7IFByb2plY3RJbnB1dCB9IGZyb20gXCIuL2NvbXBvbmVudHMvcHJvamVjdC1pbnB1dFwiO1xyXG5pbXBvcnQgeyBQcm9qZWN0TGlzdCB9IGZyb20gXCIuL2NvbXBvbmVudHMvcHJvamVjdC1saXN0XCI7XHJcblxyXG5uZXcgUHJvamVjdElucHV0KCk7XHJcbm5ldyBQcm9qZWN0TGlzdChcImFjdGl2ZVwiKTtcclxubmV3IFByb2plY3RMaXN0KFwiZmluaXNoZWRcIik7XHJcbiJdLCJuYW1lcyI6WyJDb21wb25lbnQiLCJjb25zdHJ1Y3RvciIsInRlbXBsYXRlSWQiLCJob3N0RWxlbWVudElkIiwiaW5zZXJ0QXRTdGFydCIsIm5ld0VsZW1lbnRJZCIsInRoaXMiLCJ0ZW1wbGF0ZUVsZW1lbnQiLCJkb2N1bWVudCIsImdldEVsZW1lbnRCeUlkIiwiaG9zdEVsZW1lbnQiLCJpbXBvcnRlZE5vZGUiLCJpbXBvcnROb2RlIiwiY29udGVudCIsImVsZW1lbnQiLCJmaXJzdEVsZW1lbnRDaGlsZCIsImlkIiwiYXR0YWNoIiwiaW5zZXJ0QXRCZWdpbm5pbmciLCJpbnNlcnRBZGphY2VudEVsZW1lbnQiLCJ2YWxpZGF0ZSIsInZhbGlkYXRhYmxlSW5wdXQiLCJpc1ZhbGlkIiwicmVxdWlyZWQiLCJ2YWx1ZSIsInRvU3RyaW5nIiwidHJpbSIsImxlbmd0aCIsIm1pbkxlbmd0aCIsIm1heExlbmd0aCIsIm1pbiIsIm1heCIsImF1dG9iaW5kIiwiXyIsIl8yIiwiZGVzY3JpcHRvciIsIm9yaWdpbk1ldGhvZCIsImNvbmZpZ3VyYWJsZSIsImdldCIsImJpbmQiLCJQcm9qZWN0U3RhdHVzIiwiUHJvamVjdCIsInRpdGxlIiwiZGVzYyIsInBlb3BsZSIsInN0YXR1cyIsIlN0YXRlIiwibGlzdGVuZXJzIiwiYWRkTGlzdGVuZXIiLCJsaXN0ZW5lckZuIiwicHVzaCIsIlByb2plY3RTdGF0ZSIsInN1cGVyIiwicHJvamVjdHMiLCJzdGF0aWMiLCJpbnN0YW5jZSIsImFkZFByb2plY3QiLCJudW1PZlBlb3BsZSIsIm5ld1Byb2plY3QiLCJNYXRoIiwicmFuZG9tIiwiQWN0aXZlIiwidXBkYXRlZExpc3RlbmVycyIsIm1vdmVQcm9qZWN0IiwicHJvamVjdElkIiwibmV3U3RhdHVzIiwicHJvamVjdCIsImZpbmQiLCJwcmoiLCJzbGljZSIsInByb2plY3RTdGF0ZSIsImdldEluc3RhbmNlIiwiUHJvamVjdElucHV0IiwidGl0bGVJbnB1dEVsIiwicXVlcnlTZWxlY3RvciIsImRlc2NJbnB1dEVsIiwicGVvcGxlSW5wdXRFbCIsImNvbmZpZ3VyZSIsImdhdGhlclVzZXJJbnB1dCIsImVudGVyZWRUaXRsZSIsImVudGVyZWREZXNjIiwiZW50ZXJlZFBlb3BsZSIsImRlc2NWYWxpZGF0YWJsZSIsInBlb3BsZVZhbGlkYXRhYmxlIiwiYWxlcnQiLCJjbGVhcklucHV0cyIsInN1Ym1pdEhhbmRsZXIiLCJlIiwicHJldmVudERlZmF1bHQiLCJ1c2VySW5wdXQiLCJBcnJheSIsImlzQXJyYXkiLCJhZGRFdmVudExpc3RlbmVyIiwicmVuZGVyQ29udGVudCIsIlByb2plY3RJdGVtIiwicGVyc29ucyIsImhvc3RJZCIsImRyYWdTdGFydEhhbmRsZXIiLCJkYXRhVHJhbnNmZXIiLCJzZXREYXRhIiwiZWZmZWN0QWxsb3dlZCIsImRyYWdFbmRIYW5kbGVyIiwidGV4dENvbnRlbnQiLCJQcm9qZWN0TGlzdCIsInR5cGUiLCJhc3NpZ25lZFByb2plY3QiLCJkcmFnT3ZlckhhbmRsZXIiLCJ0eXBlcyIsImNsYXNzTGlzdCIsImFkZCIsImRyb3BIYW5kbGVyIiwicHJqSWQiLCJnZXREYXRhIiwiRmluaXNoZWQiLCJkcmFnTGVhdmVIYW5kbGVyIiwicmVtb3ZlIiwicmVsZXZhbnRQcm9qZWN0IiwiZmlsdGVyIiwicmVuZGVyUHJvamVjdHMiLCJsaXN0SWQiLCJ0b1VwcGVyQ2FzZSIsImlubmVySFRNTCIsInByakl0ZW0iXSwic291cmNlUm9vdCI6IiJ9